#!/bin/bash
# Ensure 10.8.0.0/24 traffic on macOS prefers the local server utun and keeps
# deterministic routing when OpenVPN Connect is present.
set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# shellcheck source=scripts/lib/env.sh
source "$SCRIPT_DIR/lib/env.sh"

SERVER_TUN_IP="${OVPN_SERVER_TUN_IP:-10.8.0.1}"
CONNECT_TUN_IP="${OVPN_CONNECT_SELF_IP:-10.8.0.5}"
PF_ANCHOR_NAME="${OVPN_PF_ANCHOR_NAME:-com.example.openvpn}"
PF_ANCHOR_PATH="${OVPN_PF_ANCHOR_PATH:-/etc/pf.anchors/${PF_ANCHOR_NAME}}"
LOG_FILE="${OVPN_ENFORCE_SCOPE_LOG:-/var/log/enforce-108-scope.log}"

ts(){ date '+%F %T'; }
log(){ printf '[%s] %s\n' "$(ts)" "$*" >> "$LOG_FILE" 2>/dev/null || true; }

find_utun(){
  local target="$1"
  local iface="" line
  while IFS= read -r line; do
    case "$line" in
      utun*:*) iface=${line%%:*};;
      *"inet $target "*) printf '%s\n' "$iface"; return 0;;
    esac
  done < <(ifconfig)
  return 1
}

replace_net_route(){
  local iface="$1"
  while netstat -rn -f inet | awk '$1=="10.8/24" {exit 0} END{exit 1}'; do
    /sbin/route -n delete -net 10.8.0.0/24 2>/dev/null || break
  done
  /sbin/route -n add -net 10.8.0.0/24 -iface "$iface" 2>/dev/null || true
}

ensure_host_route(){
  local ip="$1" iface="$2"
  /sbin/route -n change -host "$ip" -iface "$iface" 2>/dev/null || \
  /sbin/route -n add -host "$ip" -iface "$iface" 2>/dev/null || true
}

main(){
  local server_iface connect_iface
  server_iface=$(find_utun "$SERVER_TUN_IP" || true)
  [ -n "$server_iface" ] || { log "no utun owning $SERVER_TUN_IP"; exit 0; }
  log "server interface: $server_iface"
  replace_net_route "$server_iface"

  connect_iface=$(find_utun "$CONNECT_TUN_IP" || true)
  if [ -n "$connect_iface" ]; then
    log "connect interface: $connect_iface"
    ensure_host_route "$SERVER_TUN_IP" "$connect_iface"
  fi

  if [ -n "$connect_iface" ] && [ -w "${PF_ANCHOR_PATH%/*}" ]; then
    cat >"$PF_ANCHOR_PATH" <<PF
# Autogenerated by enforce-108-route-scope.sh
pass in quick on $connect_iface inet from 10.8.0.0/24 to $CONNECT_TUN_IP reply-to ($connect_iface $SERVER_TUN_IP) keep state
PF
    pfctl -a "$PF_ANCHOR_NAME" -f "$PF_ANCHOR_PATH" >/dev/null 2>&1 || true
  fi
}

main "$@"
